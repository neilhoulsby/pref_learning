%!PS-Adobe-2.0 EPSF-1.2
%%Title: sticker.fh11
%%Creator: FreeHand MX
%%CreationDate: Wed May 05 13:48:48 2010 
%%BoundingBox: 0 0 129 199
%%FHPathName:C:\Documents and Settings\Pedro Ortega\Desktop\cbllogo\sticker.fh11
%ALDOriginalFile:C:\Documents and Settings\Pedro Ortega\Desktop\cbllogo\sticker.fh11
%ALDBoundingBox: -239 -316 373 476
%%FHPageNum:1
%%DocumentSuppliedResources: procset Altsys_header 4 0
%%ColorUsage: Color
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%DocumentNeededResources: font Lucida-Grande
%%DocumentFonts: Lucida-Grande
%%DocumentNeededFonts: Lucida-Grande
%%EndComments
%%BeginResource: procset Altsys_header 4 0
userdict begin /AltsysDict 300 dict def end
AltsysDict begin
/bdf{bind def}bind def
/xdf{exch def}bdf
/defed{where{pop true}{false}ifelse}bdf
/ndf{1 index where{pop pop pop}{dup xcheck{bind}if def}ifelse}bdf
/d{setdash}bdf
/h{closepath}bdf
/H{}bdf
/J{setlinecap}bdf
/j{setlinejoin}bdf
/M{setmiterlimit}bdf
/n{newpath}bdf
/N{newpath}bdf
/q{gsave}bdf
/Q{grestore}bdf
/w{setlinewidth}bdf
/Xic{matrix invertmatrix concat}bdf
/Xq{matrix currentmatrix mark}bdf
/XQ{cleartomark setmatrix}bdf
/sepdef{
dup where not
{
AltsysSepDict
}
if	
3 1 roll exch put
}bdf
/st{settransfer}bdf
/colorimage defed /_rci xdf
/cntr 0 def
/readbinarystring{
/cntr 0 def
2 copy readstring
{
{
dup
(\034) search
{
length exch pop exch
dup length 0 ne
{
dup dup 0 get  32 sub 0 exch put
/cntr cntr 1 add def
}
{
pop 1 string dup
0 6 index read pop 32 sub put
}ifelse
3 copy
putinterval pop
1 add
1 index length 1 sub
1 index sub
dup 0 le {pop pop exit}if
getinterval
}
{
pop exit
} ifelse
} loop
}if
cntr 0 gt
{
pop 2 copy
dup length cntr sub cntr getinterval
readbinarystring
} if
pop exch pop
} bdf
/_NXLevel2 defed {			
_NXLevel2 not {			
/colorimage where {
userdict eq {
/_rci false def		
} if
} if
} if
} if
/md defed{	
md type /dicttype eq {		
/colorimage where {		
md eq {				
/_rci false def	
}if
}if
/settransfer where {
md eq {
/st systemdict /settransfer get def
}if
}if
}if
}if
/setstrokeadjust defed
{
true setstrokeadjust
/C{curveto}bdf
/L{lineto}bdf
/m{moveto}bdf
}
{
/dr{transform .25 sub round .25 add
exch .25 sub round .25 add exch itransform}bdf
/C{dr curveto}bdf
/L{dr lineto}bdf
/m{dr moveto}bdf
/setstrokeadjust{pop}bdf	
}ifelse
/privrectpath {	
4 -2 roll m
dtransform round exch round exch idtransform	
2 copy 0 lt exch 0 lt xor
{dup 0 exch rlineto exch 0 rlineto neg 0 exch rlineto}
{exch dup 0 rlineto exch 0 exch rlineto neg 0 rlineto}
ifelse
closepath
}bdf
/rectclip{newpath privrectpath clip newpath}def
/rectfill{gsave newpath privrectpath fill grestore}def
/rectstroke{gsave newpath privrectpath stroke grestore}def
/_fonthacksave false def
/currentpacking defed
{
/_bfh {/_fonthacksave currentpacking def false setpacking} bdf
/_efh {_fonthacksave setpacking} bdf
}
{
/_bfh {} bdf
/_efh {} bdf
}ifelse
/packedarray{array astore readonly}ndf
/`	
{
false setoverprint		
/-save0- save def
5 index concat
pop
storerect left bottom width height rectclip
pop
/MMdict_count countdictstack def
/MMop_count count 1 sub def
userdict begin
/showpage {} def
0 setgray 0 setlinecap 1 setlinewidth
0 setlinejoin 10 setmiterlimit [] 0 setdash newpath
} bdf
/currentpacking defed{true setpacking}if
/min{2 copy gt{exch}if pop}bdf
/max{2 copy lt{exch}if pop}bdf
/xformfont { currentfont exch makefont setfont } bdf
/fhnumcolors 1
statusdict begin
/processcolors defed
{
pop processcolors
}
{
/deviceinfo defed {
deviceinfo /Colors known {
pop deviceinfo /Colors get
} if
} if
} ifelse
end 
def
%	pix = x^2 + y^2
/printerRes
gsave
matrix defaultmatrix setmatrix
72 72 dtransform
abs exch abs
max
grestore
def
/graycalcs
[
{Angle Frequency}			
{GrayAngle GrayFrequency}	
{0 Width Height matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
{0 GrayWidth GrayHeight matrix defaultmatrix idtransform
dup mul exch dup mul add sqrt 72 exch div}	
] def
/calcgraysteps {
forcemaxsteps
{
maxsteps
}
{
/currenthalftone defed
{currenthalftone /dicttype eq}{false}ifelse
{
currenthalftone begin
HalftoneType 4 le
{graycalcs HalftoneType 1 sub get exec}
{
HalftoneType 5 eq
{
Default begin
{graycalcs HalftoneType 1 sub get exec}
end
}
{0 60}	
ifelse
}
ifelse
end
}
{
currentscreen pop exch			
}
ifelse
printerRes 300 max exch div exch	
2 copy								
sin mul round dup mul				
3 1 roll							
cos mul round dup mul				
add 1 add							
dup maxsteps gt {pop maxsteps} if	
dup minsteps lt {pop minsteps} if	
}
ifelse
} bdf
/nextrelease defed {						
/languagelevel defed not {				
/framebuffer defed {				
0 40 string framebuffer 9 1 roll 8 {pop} repeat
dup 516 eq exch 520 eq or
{
/fhnumcolors 3 def
/currentscreen {60 0 {pop pop 1}}bdf
/calcgraysteps {maxsteps} bdf
}if
}if
}if
}if
fhnumcolors 1 ne {
/calcgraysteps {maxsteps} bdf
} if
/currentpagedevice defed {
currentpagedevice /PreRenderingEnhance known
{
currentpagedevice /PreRenderingEnhance get
{
/calcgraysteps
{
forcemaxsteps
{maxsteps}
{256 maxsteps min}
ifelse
} def
} if
} if
} if
/gradfrequency 144 def
printerRes 1000 lt {
/gradfrequency 72 def
} if
/adjnumsteps {
dup dtransform abs exch abs max  
printerRes div 					 
gradfrequency mul 				 
round 						 
5 max						 
min							 
}bdf
/goodsep {
spots exch get 4 get dup sepname eq exch (_vc_Registration) eq or
}bdf
/BeginGradation defed
{/bb{BeginGradation}bdf}
{/bb{}bdf}
ifelse
/EndGradation defed
{/eb{EndGradation}bdf}
{/eb{}bdf}
ifelse
/bottom -0 def			
/delta -0 def			
/frac -0 def			
/height -0 def			
/left -0 def			
/numsteps1 -0 def		
/radius -0 def			
/right -0 def			
/top -0 def				
/width -0 def			
/xt -0 def				
/yt -0 def				
/df currentflat def		
/tempstr 1 string def	
/clipflatness currentflat def	
/inverted?				
0 currenttransfer exec .5 ge def
/tc1 [0 0 0 1] def		
/tc2 [0 0 0 1] def		
/storerect{/top xdf /right xdf /bottom xdf /left xdf
/width right left sub def /height top bottom sub def}bdf
/concatprocs{
systemdict /packedarray known
{dup type /packedarraytype eq 2 index type /packedarraytype eq or}{false}ifelse
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
proc1 aload pop proc2 aload pop
proc1 length proc2 length add packedarray cvx
}
{	
/proc2 exch cvlit def	/proc1 exch cvlit def
/newproc proc1 length proc2 length add array def
newproc 0 proc1 putinterval newproc proc1 length proc2 putinterval
newproc cvx
}ifelse
}bdf
/i{dup 0 eq
{pop df dup}	
{dup} ifelse
/clipflatness xdf setflat
}bdf
version cvr 38.0 le
{/setrgbcolor{
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
currenttransfer exec 3 1 roll
setrgbcolor}bdf}if
/vms {/vmsv save def} bdf
/vmr {vmsv restore} bdf
/vmrs{vmsv restore /vmsv save def}bdf
/eomode{
{/filler /eofill load def /clipper /eoclip load def}
{/filler /fill load def /clipper /clip load def}
ifelse
}bdf
/normtaper{}bdf
/logtaper{9 mul 1 add log}bdf
/CD{
/NF exch def	
{				
exch dup	
/FID ne 1 index/UniqueID ne and
{exch NF 3 1 roll put}
{pop pop}
ifelse
}forall
NF
}bdf
/MN{
1 index length 		
/Len exch def
dup length Len add 	
string dup 			
Len 				
4 -1 roll 			
putinterval 		
dup 				
0 					
4 -1 roll			
putinterval			
}bdf
/RC{4 -1 roll /ourvec xdf 256 string cvs(|______)anchorsearch
{1 index MN cvn/NewN exch def cvn
findfont dup maxlength dict CD dup/FontName NewN put dup
/Encoding ourvec put NewN exch definefont pop}{pop}ifelse}bdf
/RF{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RC}
ifelse
}bdf
/FF{dup 256 string cvs(|______)exch MN cvn dup FontDirectory exch known
{exch pop findfont 3 -1 roll pop}
{pop dup findfont dup maxlength dict CD dup dup
/Encoding exch /Encoding get 256 array copy 7 -1 roll
{3 -1 roll dup 4 -2 roll put}forall put definefont}
ifelse}bdf
/RCJ{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFJ		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFJ{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCJ}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFJ
{
dup			
hasfont		
not			
{			
pop
/Ryumin-Light-83pv-RKSJ-H
hasfont			
{
/Ryumin-Light-83pv-RKSJ-H
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFJ{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFJ				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
dup length 256 eq
{
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
{
7 -1 roll pop		
pop pop pop pop		
findfont
}
ifelse
}
ifelse
_efh
}bdf
/GS {
dup
hasfont
{
findfont
exch makesetfont
exch
pop
ts
}
{
pop pop pop
ts
} ifelse
} bdf
/RCK{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFK		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFK{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCK}
ifelse
}bdf
/hasfont
{
/resourcestatus where	
{
pop			
/Font resourcestatus
{			
pop pop true
}
{			
false
}
ifelse
}
{
dup FontDirectory exch known
{pop true}
{
256 string
cvs
(fonts/) exch MN
status
{pop pop pop pop true}
{false}
ifelse
}
ifelse
}
ifelse
}bdf
/FDFK
{
dup			
hasfont		
not			
{			
pop
/JCsm
hasfont			
{
/JCsm
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFK{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFK				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCTC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFTC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFTC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCTC}
ifelse
}bdf
/FDFTC
{
dup			
hasfont		
not			
{			
pop
/DFMing-Lt-HK-BF
hasfont			
{
/DFMing-Lt-HK-BF
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFTC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFTC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/RCSC{4 -1 roll 			
/ourvec xdf  		
256 string cvs 		
(|______) anchorsearch
{pop				
cvn				
dup FDFSC		
exch	 		
1 index 		
eq				
{
_bfh findfont _efh		
dup 					
maxlength dict			
CD						
dup						
/FontName 		
3 index			
put						
dup						
/Encoding ourvec put	
1 index					
exch 					
definefont				
pop						
}
{exch pop}		
ifelse
}
{pop}				
ifelse
}bdf
/RFSC{						
dup 					
FontDirectory exch 		
known					
{pop 3 -1 roll pop}		
{RCSC}
ifelse
}bdf
/FDFSC
{
dup			
hasfont		
not			
{			
pop
/zh-gbscript-1.11
hasfont			
{
/zh-gbscript-1.11
}
{
/Courier
}
ifelse			
}
if
}bdf
/FFSC{
_bfh
dup					
256 string cvs		
(|______)exch MN	
cvn					
dup					
FontDirectory
exch known			
{					
exch				
pop					
findfont			
3 -1 roll			
pop					
}
{					
pop					
FDFSC				
dup findfont		
dup maxlength dict	
CD 					
dup dup				
/Encoding exch		
/Encoding get		
256 array copy		
7 -1 roll 			
{					
3 -1 roll		
dup				
4 -2 roll		
put				
}forall
put 				
definefont			
}
ifelse
_efh
}bdf
/fps{
currentflat 		
exch 				
dup 0 le{pop 1}if	
{
dup setflat 3 index stopped
{1.3 mul dup 3 index gt{pop setflat pop pop stop}if}	
{exit}			
ifelse
}loop
pop setflat pop pop
}bdf
/fp{100 currentflat fps}bdf
/clipper{clip}bdf		
/W{/clipper load 100 clipflatness dup setflat fps}bdf
/AVec 256 array def
AVec 0 /Helvetica findfont
/Encoding get 0 256 getinterval putinterval
/ANSIPatch[
16#0/grave 16#1/acute 16#2/circumflex 16#3/tilde 16#4/macron 16#5/breve
16#6/dotaccent 16#7/dieresis 16#8/ring 16#9/cedilla 16#A/hungarumlaut
16#B/ogonek 16#C/caron 16#D/dotlessi 16#27/quotesingle 16#60/grave
16#7C/bar 16#82/quotesinglbase 16#83/florin 16#84/quotedblbase 16#85
/ellipsis 16#86/dagger 16#87/daggerdbl 16#89/perthousand 16#8A/Scaron
16#8B/guilsinglleft 16#8C/OE 16#91/quoteleft 16#92/quoteright 16#93
/quotedblleft 16#94/quotedblright 16#95/bullet 16#96/endash 16#97/emdash
16#99/trademark 16#9A/scaron 16#9B/guilsinglright 16#9C/oe
16#9F/Ydieresis 16#A0/space 16#A4/currency 16#A6/brokenbar
16#A7/section 16#A8/dieresis 16#A9/copyright 16#AA/ordfeminine 16#AB/guillemotleft
16#AC/logicalnot 16#AD/hyphen 16#AE/registered 16#AF/macron 16#B0/degree
16#B1/plusminus 16#B2/twosuperior 16#B3/threesuperior 16#B4/acute 16#B5/mu
16#B6/paragraph 16#B7/periodcentered 16#B8/cedilla 16#B9/onesuperior
16#BA/ordmasculine 16#BB/guillemotright 16#BC/onequarter 16#BD/onehalf
16#BE/threequarters 16#BF/questiondown 16#C0/Agrave 16#C1/Aacute 16#C2/Acircumflex
16#C3/Atilde 16#C4/Adieresis 16#C5/Aring 16#C6/AE 16#C7/Ccedilla 16#C8/Egrave
16#C9/Eacute 16#CA/Ecircumflex 16#CB/Edieresis 16#CC/Igrave 16#CD/Iacute
16#CE/Icircumflex 16#CF/Idieresis 16#D0/Eth 16#D1/Ntilde 16#D2/Ograve
16#D3/Oacute 16#D4/Ocircumflex 16#D5/Otilde 16#D6/Odieresis 16#D7/multiply
16#D8/Oslash 16#D9/Ugrave 16#DA/Uacute 16#DB/Ucircumflex 16#DC/Udieresis
16#DD/Yacute 16#DE/Thorn 16#DF/germandbls 16#E0/agrave 16#E1/aacute
16#E2/acircumflex 16#E3/atilde 16#E4/adieresis 16#E5/aring 16#E6/ae
16#E7/ccedilla 16#E8/egrave 16#E9/eacute 16#EA/ecircumflex 16#EB/edieresis
16#EC/igrave 16#ED/iacute 16#EE/icircumflex 16#EF/idieresis 16#F0/eth
16#F1/ntilde 16#F2/ograve 16#F3/oacute 16#F4/ocircumflex 16#F5/otilde
16#F6/odieresis 16#F7/divide 16#F8/oslash 16#F9/ugrave 16#FA/uacute
16#FB/ucircumflex 16#FC/udieresis 16#FD/yacute 16#FE/thorn 16#FF/ydieresis
] def
127 1 159 { AVec exch/bullet put } for
ANSIPatch aload pop ANSIPatch length 2 idiv{AVec 3 1 roll put}repeat
/DoPatch { dup /CharStrings known
{ setfont
0 1 255 { dup
currentfont
/Encoding get
exch get
currentfont /CharStrings get
exch known
{pop} {currentfont /Encoding get exch /bullet put} ifelse
} for
} {pop} ifelse
} def
/findheaderfont {
AVec 256 array copy
/FHT /|______Helvetica dup RF findfont def
FHT DoPatch
FHT
}	def
end		%. AltsysDict
%%EndResource
%%EndProlog
%%BeginSetup
AltsysDict begin
_bfh	
%%IncludeResource: font Lucida-Grande
/Lucida-Grande findfont
/Encoding get StandardEncoding eq 
{
AVec 256 array copy
/f0 /|______Lucida-Grande dup RF findfont def
f0 DoPatch
} {
/f0 /Lucida-Grande findfont def  
} ifelse
_efh	
end %. AltsysDict
%%EndSetup
AltsysDict begin	
/onlyk4{false}ndf
/ccmyk{dup 5 -1 roll sub 0 max exch}ndf
/cmyk2gray{
4 -1 roll 0.3 mul 4 -1 roll 0.59 mul 4 -1 roll 0.11 mul
add add add 1 min neg 1 add
}bdf
/setcmykcolor{1 exch sub ccmyk ccmyk ccmyk pop setrgbcolor}ndf
/maxcolor {    
max max max		
} ndf
/maxspot {
pop
} ndf
/setcmykcoloroverprint{4{dup -1 eq{pop 0}if 4 1 roll}repeat setcmykcolor}ndf
/findcmykcustomcolor{5 packedarray}ndf
/setcustomcolor{exch aload pop pop 4{4 index mul 4 1 roll}repeat setcmykcolor pop}ndf
/setseparationgray{setgray}ndf
/setoverprint{pop}ndf		
/currentoverprint false ndf
/cmykbufs2gray{
0 1 2 index length 1 sub
{
4 index 1 index get	0.3 mul		
4 index 2 index get	0.59 mul	
4 index 3 index get	0.11 mul	
4 index 4 index get				
add add add cvi 255 min
255 exch sub
2 index 3 1 roll put
}for
4 1 roll pop pop pop
}bdf
/colorimage{
pop pop
[
5 -1 roll/exec cvx
6 -1 roll/exec cvx
7 -1 roll/exec cvx
8 -1 roll/exec cvx
/cmykbufs2gray cvx
]cvx
image
}
%. version 47.1 on Linotronic of Postscript defines colorimage incorrectly (rgb model only)
version cvr 47.1 le
statusdict /product get (Lino) anchorsearch{pop pop true}{pop false}ifelse
and{userdict begin bdf end}{ndf}ifelse
fhnumcolors 1 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
ic im iy ik cmyk2gray /xt xdf
currenttransfer
{dup 1.0 exch sub xt mul add}concatprocs
st
image
}
ifelse
}ndf
fhnumcolors 1 ne {yt restore} if
fhnumcolors 3 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
1.0 dup ic ik add min sub	
1.0 dup im ik add min sub	
1.0 dup iy ik add min sub	
/ic xdf /iy xdf /im xdf
currentcolortransfer
4 1 roll	
{dup 1.0 exch sub ic mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub iy mul add}concatprocs 4 1 roll	
{dup 1.0 exch sub im mul add}concatprocs 4 1 roll	
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}true 3 colorimage
}
ifelse
}ndf
fhnumcolors 3 ne {yt restore} if
fhnumcolors 4 ne {/yt save def} if
/customcolorimage{
aload pop
(_vc_Registration) eq
{
pop pop pop pop separationimage
}
{
/ik xdf /iy xdf /im xdf /ic xdf
currentcolortransfer
{1.0 exch sub ik mul ik sub 1 add}concatprocs 4 1 roll
{1.0 exch sub iy mul iy sub 1 add}concatprocs 4 1 roll
{1.0 exch sub im mul im sub 1 add}concatprocs 4 1 roll
{1.0 exch sub ic mul ic sub 1 add}concatprocs 4 1 roll
setcolortransfer
{/dummy xdf dummy}concatprocs{dummy}{dummy}{dummy}
true 4 colorimage
}
ifelse
}ndf
fhnumcolors 4 ne {yt restore} if
/separationimage{image}ndf
/spotascmyk false ndf
/newcmykcustomcolor{6 packedarray}ndf
/inkoverprint false ndf
/setinkoverprint{pop}ndf		
/setspotcolor {		
spots exch get
dup 4 get (_vc_Registration) eq
{pop 1 exch sub setseparationgray}
{0 5 getinterval exch setcustomcolor}
ifelse
}ndf
/currentcolortransfer{currenttransfer dup dup dup}ndf
/setcolortransfer{st pop pop pop}ndf
/fas{}ndf
/sas{}ndf
/fhsetspreadsize{pop}ndf
/filler{fill}bdf			
/F{gsave {filler}fp grestore}bdf
/f{closepath F}bdf
/S{gsave {stroke}fp grestore}bdf
/s{closepath S}bdf
userdict /islevel2
systemdict /languagelevel known dup
{
pop systemdict /languagelevel get 2 ge
} if
put
islevel2 not
{
/currentcmykcolor
{
0 0 0 1 currentgray sub
} ndf
} if
/tc
{
gsave
setcmykcolor currentcmykcolor
grestore
} bind def
/testCMYKColorThrough
{
tc add add add 0 ne
} bind def
/fhiscomposite where not {
userdict /fhiscomposite
islevel2
{
gsave 1 1 1 1 setcmykcolor currentcmykcolor grestore
add add add 4 eq
}
{
1 0 0 0 testCMYKColorThrough
0 1 0 0 testCMYKColorThrough
0 0 1 0 testCMYKColorThrough
0 0 0 1 testCMYKColorThrough
and and and
} ifelse
put
}
{ pop }
ifelse
/bc4 [0 0 0 0] def	
/_lfp4 {
1 pop	
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor						
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
taperfcn /frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/bcs [0 0] def	
/_lfs4 {
/yt xdf							
/xt xdf							
/ang xdf						
storerect
/taperfcn xdf
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
height abs adjnumsteps			
dup 2 lt {pop 2} if				
1 sub /numsteps1 xdf
currentflat mark				
currentflat clipflatness		
/delta top bottom sub numsteps1 1 add div def	
/right right left sub def		
/botsv top delta sub def		
{
{
W
xt yt translate
ang rotate
xt neg yt neg translate
dup setflat				
/bottom botsv def
0 1 numsteps1			
{
numsteps1 div taperfcn /frac xdf
bcs 0
1.0 tint2 tint1 sub frac mul tint1 add sub
put bcs vc
1 index setflat		
{
mark {newpath left bottom right delta rectfill}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
/bottom bottom delta sub def
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfs6 {
/tint2 xdf						
/tint1 xdf						
bcs exch 1 exch put				
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
tint1 tint2 sub abs				
bcs 1 get maxspot				
calcgraysteps mul abs round		
radius inrad sub abs			
adjnumsteps						
dup 1 lt {pop 1} if				
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf				
currentflat mark				
currentflat clipflatness		
{
{
dup setflat				
W 						
0 1 numsteps1			
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bcs 0
tint2 tint1 sub frac mul tint1 add
put bcs vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/_rfp6 {
1 pop	
/k2 xdf /y2 xdf /m2 xdf /c2 xdf
/k1 xdf /y1 xdf /m1 xdf /c1 xdf
/inrad xdf						
/radius xdf						
/yt xdf							
/xt xdf							
c1 c2 sub abs
m1 m2 sub abs
y1 y2 sub abs
k1 k2 sub abs
maxcolor					
calcgraysteps mul abs round	
radius inrad sub abs		
adjnumsteps					
dup 1 lt {pop 1} if			
1 sub /numsteps1 xdf
radius inrad sub numsteps1 dup 0 eq {pop} {div} ifelse	
2 div /halfstep xdf			
currentflat mark			
currentflat clipflatness	
{
{
dup setflat			
W 					
0 1 numsteps1		
{
dup /radindex xdf
numsteps1 dup 0 eq {pop pop 0.5} {div} ifelse 
/frac xdf
bc4 0 c2 c1 sub frac mul c1 add put
bc4 1 m2 m1 sub frac mul m1 add put
bc4 2 y2 y1 sub frac mul y1 add put
bc4 3 k2 k1 sub frac mul k1 add put
bc4 vc
1 index setflat		
{
newpath mark	
xt yt radius inrad sub 1 frac sub mul halfstep add inrad add 0 360
{	arc
radindex numsteps1 ne
inrad 0 gt or		
{
xt yt			
numsteps1 0 eq
{ inrad }	
{			
radindex 1 add numsteps1 div 1 exch sub
radius inrad sub mul halfstep add inrad add
}ifelse
dup xt add yt moveto
360 0 arcn
} if
fill
}stopped
{cleartomark exch 1.3 mul dup setflat exch 2 copy gt{stop}if}
{cleartomark exit}ifelse
}loop
}for
}
gsave stopped grestore
{exch pop 2 index exch 1.3 mul dup 100 gt{cleartomark setflat stop}if}
{exit}ifelse
}loop
cleartomark setflat
}bdf
/lfp4{_lfp4}ndf
/lfs4{_lfs4}ndf
/rfs6{_rfs6}ndf
/rfp6{_rfp6}ndf
/cvc [0 0 0 1] def	
/vc{
AltsysDict /cvc 2 index put	
aload length dup 4 eq
{pop dup -1 eq{pop setrgbcolor}{setcmykcolor}ifelse}
{6 eq {sethexcolor} {setspotcolor}	ifelse }
ifelse
}bdf	
0 setseparationgray
/imgr {1692 1584 2304 2376 } def			
/bleed 0 def			
/clpr {1692 1584 2304 2376 } def			
/xs 1 def				
/ys 1 def				
/botx 0 def			
/overlap 0 def			
/wdist 18 def			
0 2 mul fhsetspreadsize	
0 0 ne {/df 0 def /clipflatness 0 def} if	
/maxsteps 256 def		
/forcemaxsteps false def	
/minsteps 0 def		
userdict begin /AGDOrigMtx matrix currentmatrix def end
vms
-1931 -1900 translate
/currentpacking defed{false setpacking}if 	
/spots[
1 0 0 0 (Process Cyan) false newcmykcustomcolor
0 1 0 0 (Process Magenta) false newcmykcustomcolor
0 0 1 0 (Process Yellow) false newcmykcustomcolor
0 0 0 1 (Process Black) false newcmykcustomcolor
]def
/textopf false def
/curtextmtx{}def
/otw .25 def
/msf{dup/curtextmtx xdf makefont setfont}bdf
/makesetfont/msf load def
/curtextheight{.707104 .707104 curtextmtx dtransform
dup mul exch dup mul add sqrt}bdf
/ta2{							
tempstr 2 index gsave exec grestore		
cwidth cheight rmoveto				
4 index eq{5 index 5 index rmoveto}if		
2 index 2 index rmoveto			
}bdf
/ta{exch systemdict/cshow known
{{/cheight xdf/cwidth xdf tempstr 0 2 index put ta2}exch cshow}	
{{tempstr 0 2 index put tempstr stringwidth/cheight xdf/cwidth xdf ta2}forall}	
ifelse 6{pop}repeat}bdf
/sts{/textopf currentoverprint def vc setoverprint
/ts{awidthshow}def exec textopf setoverprint}bdf
/stol{/xt currentlinewidth def 	
setlinewidth vc newpath	
/ts{{false charpath stroke}ta}def exec
xt setlinewidth}bdf	
/strk{/textopf currentoverprint def vc setoverprint
/ts{{false charpath stroke}ta}def exec
textopf setoverprint
}bdf
/cvtr {1 exch sub 3 1 roll} def
/vr {
[ 3 index 3 index 3 index cvtr cvtr cvtr 0 ]
fhiscomposite not {vc pop pop pop}{pop setrgbcolor}ifelse
} def
/vc {AltsysDict /cvc 2 index put aload length dup 4 eq
{pop dup -0.2 ge {setcmykcolor} {pop vr} ifelse}
{6 eq {sethexcolor} {setspotcolor} ifelse} ifelse
} bdf
n
[] 0 d
3.863708 M
1 w
0 j
0 J
false setoverprint
0 i
false eomode
[0 0 0 1]vc
vms
2059.273 2098.6234 m
2059.273 1900.1982 L
1931.7139 1900.1982 L
1931.7139 2098.6234 L
2059.273 2098.6234 L
n
1963.8318 2079.4501 m
2027.3275 2079.4501 L
2041.1043 2079.4501 2052.2723 2068.2821 2052.2723 2054.5054 C
2052.2723 1991.0096 L
2052.2723 1977.2329 2041.1043 1966.0648 2027.3275 1966.0648 C
1963.8318 1966.0648 L
1950.0552 1966.0648 1938.8872 1977.2329 1938.8872 1991.0096 C
1938.8872 2054.5054 L
1938.8872 2068.2821 1950.0552 2079.4501 1963.8318 2079.4501 C
[0.102 0.2118 0.3961 -1]vc
f	
n
1963.8318 2074.9147 m
1952.56 2074.9147 1943.4226 2065.7773 1943.4226 2054.5054 C
1943.4226 1991.0096 L
1943.4226 1979.7377 1952.56 1970.6003 1963.8318 1970.6003 C
2027.3275 1970.6003 L
2038.5995 1970.6003 2047.7369 1979.7377 2047.7369 1991.0096 C
2047.7369 2054.5054 L
2047.7369 2065.7773 2038.5995 2074.9147 2027.3275 2074.9147 C
1963.8318 2074.9147 L
[0.6235 0.7882 0.9216 -1]vc
f	
n
1968.3673 2006.8836 m
1962.1051 2006.8836 1957.0287 2001.8073 1957.0287 1995.545 C
1957.0287 1989.2828 1962.1051 1984.2065 1968.3673 1984.2065 C
1974.6295 1984.2065 1979.7058 1989.2828 1979.7058 1995.545 C
1979.7058 2001.8073 1974.6295 2006.8836 1968.3673 2006.8836 C
h
1968.3673 2034.096 m
1962.1051 2034.096 1957.0287 2029.0197 1957.0287 2022.7575 C
1957.0287 2016.4953 1962.1051 2011.4189 1968.3673 2011.4189 C
1974.6295 2011.4189 1979.7058 2016.4953 1979.7058 2022.7575 C
1979.7058 2029.0197 1974.6295 2034.096 1968.3673 2034.096 C
h
1968.3673 2061.3085 m
1962.1051 2061.3085 1957.0287 2056.2321 1957.0287 2049.9699 C
1957.0287 2043.7077 1962.1051 2038.6314 1968.3673 2038.6314 C
1974.6295 2038.6314 1979.7058 2043.7077 1979.7058 2049.9699 C
1979.7058 2056.2321 1974.6295 2061.3085 1968.3673 2061.3085 C
h
1995.5797 2061.3085 m
1989.3175 2061.3085 1984.2412 2056.2321 1984.2412 2049.9699 C
1984.2412 2043.7077 1989.3175 2038.6314 1995.5797 2038.6314 C
2001.8419 2038.6314 2006.9182 2043.7077 2006.9182 2049.9699 C
2006.9182 2056.2321 2001.8419 2061.3085 1995.5797 2061.3085 C
h
2022.7922 2061.3085 m
2016.5299 2061.3085 2011.4537 2056.2321 2011.4537 2049.9699 C
2011.4537 2043.7077 2016.5299 2038.6314 2022.7922 2038.6314 C
2029.0543 2038.6314 2034.1306 2043.7077 2034.1306 2049.9699 C
2034.1306 2056.2321 2029.0543 2061.3085 2022.7922 2061.3085 C
h
2022.7922 2034.096 m
2016.5299 2034.096 2011.4537 2029.0197 2011.4537 2022.7575 C
2011.4537 2016.4953 2016.5299 2011.4189 2022.7922 2011.4189 C
2029.0543 2011.4189 2034.1306 2016.4953 2034.1306 2022.7575 C
2034.1306 2029.0197 2029.0543 2034.096 2022.7922 2034.096 C
h
1979.7058 2033.8671 m
1979.7058 2038.8603 L
1978.7659 2037.9012 1977.7053 2037.0608 1976.5484 2036.3638 C
1977.7053 2035.6667 1978.7659 2034.8263 1979.7058 2033.8671 C
h
2011.6826 2034.096 m
1995.5797 2034.096 L
1991.1379 2034.096 1987.1223 2035.9202 1984.2412 2038.8603 C
1984.2412 2022.7575 L
1984.2412 2018.3157 1982.4168 2014.3001 1979.4766 2011.4189 C
1995.5797 2011.4189 L
1998.6033 2011.4189 1998.6033 2006.8836 1995.5797 2006.8836 C
1979.4766 2006.8836 L
1982.4168 2004.0024 1984.2412 1999.9868 1984.2412 1995.545 C
1984.2412 1986.7779 1977.1343 1979.6711 1968.3673 1979.6711 C
1959.6002 1979.6711 1952.4933 1986.7779 1952.4933 1995.545 C
1952.4933 2001.3194 1955.5764 2006.3736 1960.1861 2009.1513 C
1955.5764 2011.9289 1952.4933 2016.9831 1952.4933 2022.7575 C
1952.4933 2028.5318 1955.5764 2033.586 1960.1861 2036.3638 C
1955.5764 2039.1414 1952.4933 2044.1956 1952.4933 2049.9699 C
1952.4933 2058.737 1959.6002 2065.8439 1968.3673 2065.8439 C
1974.1416 2065.8439 1979.1958 2062.7606 1981.9735 2058.1508 C
1984.7512 2062.7606 1989.8053 2065.8439 1995.5797 2065.8439 C
2001.354 2065.8439 2006.4082 2062.7606 2009.1859 2058.1508 C
2011.9636 2062.7606 2017.0177 2065.8439 2022.7922 2065.8439 C
2031.5592 2065.8439 2038.666 2058.737 2038.666 2049.9699 C
2038.666 2044.1956 2035.5828 2039.1414 2030.9729 2036.3638 C
2035.5828 2033.586 2038.666 2028.5318 2038.666 2022.7575 C
2038.666 2013.9904 2031.5592 2006.8836 2022.7922 2006.8836 C
2014.0251 2006.8836 2006.9182 2013.9904 2006.9182 2022.7575 C
2006.9182 2027.1993 2008.7424 2031.2149 2011.6826 2034.096 C
h
2006.6893 2038.6314 m
2011.6826 2038.6314 L
2010.7234 2039.5713 2009.883 2040.632 2009.1859 2041.7888 C
2008.4889 2040.632 2007.6485 2039.5713 2006.6893 2038.6314 C
[1 1 1 -1]vc
f	
n
2034.1306 1981.9388 m
2034.1306 2022.7575 L
2034.1306 2025.7811 2038.666 2025.7811 2038.666 2022.7575 C
2038.666 1981.9388 L
2038.666 1978.9152 2034.1306 1978.9152 2034.1306 1981.9388 C
4.1995 w
3.863693 M
s	
n
2034.1306 1981.9388 m
2034.1306 2022.7575 L
2034.1306 2025.7811 2038.666 2025.7811 2038.666 2022.7575 C
2038.666 1981.9388 L
2038.666 1978.9152 2034.1306 1978.9152 2034.1306 1981.9388 C
[0.102 0.2118 0.3961 -1]vc
f	
n
2022.7922 2011.419 m
2031.5592 2011.419 2038.666 2004.3121 2038.666 1995.5451 C
2038.666 1986.778 2031.5592 1979.6711 2022.7922 1979.6711 C
2014.0251 1979.6711 2006.9182 1986.778 2006.9182 1995.5451 C
2006.9182 2022.7575 L
2006.9182 2025.7811 2011.4537 2025.7811 2011.4537 2022.7575 C
2011.4537 2006.6547 L
2014.3348 2009.5948 2018.3504 2011.419 2022.7922 2011.419 C
[1 1 1 -1]vc
s	
n
2022.7922 2006.8836 m
2016.5299 2006.8836 2011.4537 2001.8073 2011.4537 1995.5451 C
2011.4537 1989.2829 2016.5299 1984.2065 2022.7922 1984.2065 C
2029.0543 1984.2065 2034.1306 1989.2829 2034.1306 1995.5451 C
2034.1306 2001.8073 2029.0543 2006.8836 2022.7922 2006.8836 C
s	
n
2022.7922 2011.419 m
2031.5592 2011.419 2038.666 2004.3121 2038.666 1995.5451 C
2038.666 1986.778 2031.5592 1979.6711 2022.7922 1979.6711 C
2014.0251 1979.6711 2006.9182 1986.778 2006.9182 1995.5451 C
2006.9182 2022.7575 L
2006.9182 2025.7811 2011.4537 2025.7811 2011.4537 2022.7575 C
2011.4537 2006.6547 L
2014.3348 2009.5948 2018.3504 2011.419 2022.7922 2011.419 C
h
2022.7922 2006.8836 m
2016.5299 2006.8836 2011.4537 2001.8073 2011.4537 1995.5451 C
2011.4537 1989.2829 2016.5299 1984.2065 2022.7922 1984.2065 C
2029.0543 1984.2065 2034.1306 1989.2829 2034.1306 1995.5451 C
2034.1306 2001.8073 2029.0543 2006.8836 2022.7922 2006.8836 C
[0.102 0.2118 0.3961 -1]vc
f	
n
2010.9833 1991.696 m
2009.2624 1984.79 2003.0218 1979.6711 1995.5797 1979.6711 C
1986.8127 1979.6711 1979.7058 1986.778 1979.7058 1995.5451 C
1979.7058 2004.3121 1986.8127 2011.419 1995.5797 2011.419 C
2003.0218 2011.419 2009.2624 2006.3002 2010.9833 1999.3942 C
2011.7144 1996.4603 2007.3135 1995.3637 2006.5825 1998.2975 C
2005.3532 2003.2307 2000.8902 2006.8836 1995.5797 2006.8836 C
1989.3175 2006.8836 1984.2412 2001.8073 1984.2412 1995.5451 C
1984.2412 1989.2829 1989.3175 1984.2065 1995.5797 1984.2065 C
2000.8902 1984.2065 2005.3532 1987.8595 2006.5825 1992.7926 C
2007.3135 1995.7264 2011.7144 1994.6298 2010.9833 1991.696 C
[1 1 1 -1]vc
s	
n
2010.9833 1991.696 m
2009.2624 1984.79 2003.0218 1979.6711 1995.5797 1979.6711 C
1986.8127 1979.6711 1979.7058 1986.778 1979.7058 1995.5451 C
1979.7058 2004.3121 1986.8127 2011.419 1995.5797 2011.419 C
2003.0218 2011.419 2009.2624 2006.3002 2010.9833 1999.3942 C
2011.7144 1996.4603 2007.3135 1995.3637 2006.5825 1998.2975 C
2005.3532 2003.2307 2000.8902 2006.8836 1995.5797 2006.8836 C
1989.3175 2006.8836 1984.2412 2001.8073 1984.2412 1995.5451 C
1984.2412 1989.2829 1989.3175 1984.2065 1995.5797 1984.2065 C
2000.8902 1984.2065 2005.3532 1987.8595 2006.5825 1992.7926 C
2007.3135 1995.7264 2011.7144 1994.6298 2010.9833 1991.696 C
[0.102 0.2118 0.3961 -1]vc
f	
n
2052.273 1952.8911 m
1938.8872 1952.8911 L
1938.8872 1924.5446 L
2052.273 1924.5446 L
2052.273 1952.8911 L
n
q
%%IncludeResource: font Lucida-Grande
{
f0 [12 0 0 12 0 0] makesetfont
1938.8872 1943.2912 m
-0.254303 0 32 -0.254303 0 (Computational and) ts
}
true
[0 0 0 1]sts
{
f0 [12 0 0 12 0 0] makesetfont
1938.8872 1931.2912 m
-0.237686 0 32 -0.237671 0 (Biological Learning) ts
}
true
[0 0 0 1]sts
Q
false eomode
2052.273 1925.5446 m
1938.8872 1925.5446 L
1938.8872 1911.3714 L
2052.273 1911.3714 L
2052.273 1925.5446 L
n
q
%%IncludeResource: font Lucida-Grande
{
f0 [9 0 0 9 0 0] makesetfont
1938.8872 1918.3447 m
0.045227 0 32 0.011292 0 (University of Cambridge) ts
}
true
[0.4 0.4 0.4 -1]sts
Q
false eomode
vmr
vmr
end
%%Trailer
%%DocumentNeededResources: font Lucida-Grande
%%DocumentFonts: Lucida-Grande
%%DocumentNeededFonts: Lucida-Grande
